"use strict";angular.module("akat-form-creator",["textAngular","ngTagsInput","ui.bootstrap","ui.select","ui.sortable"]),angular.module("akat-form-creator").directive("elembox",["$compile",function(a){return{templateUrl:"submodules/akat-form-creator/elements/box/box.html",replace:!0,restrict:"E",scope:{name:"@",model:"=",parent:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"=",form:"="},link:function(b,c){var d=_.get(b,"options",{});if(b["class"]={},b.horizontal){var e=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,f=e?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-f),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+f:b["class"].wrapper+=" col-sm-offset-"+f}_.has(b,"options.class")&&c.addClass(b.options["class"]);var g=angular.element("<div/>");if(d.fields){var h=angular.element("<dynfields />");h.attr("data-options","options"),h.attr("data-model","model"),h.attr("data-parent","parent"),h.attr("data-root","root"),h.attr("data-name","{{ name }}"),h.attr("data-form","form"),h.attr("data-validation","validation || form"),(_.has(d,"horizontal")?d.horizontal:b.horizontal)&&h.attr("data-horizontal","true"),(_.has(d,"inline")?d.inline:b.inline)&&h.attr("data-inline","true"),_.has(d,"offset")?h.attr("data-offset",d.offset):_.has(b,"offset")&&h.attr("data-offset",b.offset),g.append(h)}if(_(c.children()).forEach(function(a){g.append(a)}),_.get(b,"options.panel",!1)){var i=angular.element('<div data-ng-class="class.wrapper"/>'),j=angular.element('<div class="panel"/>');j.addClass(_.get(b,"options.panel.type","panel-default")),_.get(b,"options.panel.heading",!1)&&j.append('<div class="panel-heading">'+b.options.panel.heading+"</div>"),j.append(g.addClass("panel-body")),c.append(a(i.append(j))(b))}else g.attr("data-ng-class","class.wrapper"),c.append(a(g)(b));if(b.model||(b.model={}),!b.model&&_.get(b,"options.default.field",!1))var k=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?k():b.model=a)},!0)}}}]),angular.module("akat-form-creator").directive("elemboxarray",["$compile",function(a){return{templateUrl:"submodules/akat-form-creator/elements/boxarray/boxarray.html",replace:!0,restrict:"E",scope:{name:"@",model:"=",parent:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"=",form:"="},link:function(a,b){a.model=[{},{},{},{}],a["class"]={},a.controls=!_.has(a,"options.controls")||a.options.controls;var c=_.get(a,"options",{});if(a.horizontal){var d=!_.isArray(a.offset)&&a.offset-parseFloat(a.offset)+1>=0,e=d?parseInt(a.offset):2;a["class"].wrapper="col-sm-"+(12-e),_.get(a,"options.label",!1)?a["class"].label="control-label col-sm-"+e:a["class"].wrapper+=" col-sm-offset-"+e}_.has(a,"options.class")&&b.addClass(a.options["class"]),(_.has(c,"horizontal")?c.horizontal:a.horizontal)&&(a.fieldsHorizontal=!0),(_.has(c,"inline")?c.inline:a.inline)&&(a.fieldsInline=!0),_.has(c,"offset")?a.fieldsOffset=c.offset:_.has(a,"offset")&&(a.fieldsOffset=a.offset),_.get(a,"options.panel",!1)&&(a["class"].panel="panel "+_.get(a,"options.panel.type","panel-default")),a["delete"]=function(b,c){a.model.splice(b,1)},a.add=function(){a.model.push({})}}}}]),angular.module("akat-form-creator").directive("elemcheckbox",function(){return{templateUrl:"submodules/akat-form-creator/elements/checkbox/checkbox.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(a,b){if(a["class"]={},a.horizontal){var c=!_.isArray(a.offset)&&a.offset-parseFloat(a.offset)+1>=0,d=c?parseInt(a.offset):2;a["class"].wrapper="col-sm-"+(12-d),_.get(a,"options.label",!1)?a["class"].label="control-label col-sm-"+d:a["class"].wrapper+=" col-sm-offset-"+d}if(_.has(a,"options.class")&&b.addClass(a.options["class"]),_.get(a,"options.panel",!1)&&(a["class"].panel="panel "+_.get(a,"options.panel.type","panel-default")),!a.model&&_.get(a,"options.default.field",!1))var e=a.root.$watch("model."+a.options["default"].field,function(b){b&&(a.validation.$dirty?e():a.model=b)},!0)}}}),angular.module("akat-form-creator").directive("elemdatepicker",function(){return{templateUrl:"submodules/akat-form-creator/elements/datepicker/datepicker.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(a,b){function c(a){var b=a.date,c=a.mode;return"day"===c&&(0===b.getDay()||6===b.getDay())}function d(b){var c=b.date,d=b.mode;if("day"===d)for(var e=new Date(c).setHours(0,0,0,0),f=0;f<a.events.length;f++){var g=new Date(a.events[f].date).setHours(0,0,0,0);if(e===g)return a.events[f].status}return""}if(a["class"]={},a.horizontal){var e=!_.isArray(a.offset)&&a.offset-parseFloat(a.offset)+1>=0,f=e?parseInt(a.offset):2;a["class"].wrapper="col-sm-"+(12-f),_.get(a,"options.label",!1)?a["class"].label="control-label col-sm-"+f:a["class"].wrapper+=" col-sm-offset-"+f}if(_.has(a,"options.class")&&b.addClass(a.options["class"]),_.get(a,"options.panel",!1)&&(a["class"].panel="panel "+_.get(a,"options.panel.type","panel-default")),a.init=function(){a.today(),a.toggleMin(),a.inlineOptions={customClass:d,minDate:new Date,showWeeks:!0},a.dateOptions={dateDisabled:c,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1};var b=new Date;b.setDate(b.getDate()+1);var e=new Date;e.setDate(b.getDate()+1),a.events=[{date:b,status:"full"},{date:e,status:"partially"}],a.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],a.format=a.formats[0],a.altInputFormats=["M!/d!/yyyy"]},a.today=function(){a.dt=new Date},a.clear=function(){a.dt=null},a.toggleMin=function(){a.inlineOptions.minDate=a.inlineOptions.minDate?null:new Date,a.dateOptions.minDate=a.inlineOptions.minDate},a.open1=function(){a.popup1.opened=!0},a.open2=function(){a.popup2.opened=!0},a.setDate=function(b,c,d){a.dt=new Date(b,c,d)},a.popup1={opened:!1},a.popup2={opened:!1},!a.model&&_.get(a,"options.default.field",!1))var g=a.root.$watch("model."+a.options["default"].field,function(b){b&&(a.validation.$dirty?g():a.model=b)},!0)}}}),angular.module("akat-form-creator").directive("elemdatetimepicker",["$timeout",function(a){return{templateUrl:"submodules/akat-form-creator/elements/datetimepicker/datetimepicker.html",restrict:"E",replace:!0,scope:{name:"@",offset:"=",inline:"=",horizontal:"=",model:"=",root:"=",options:"=",validation:"="},link:function(a,b){if(a["class"]={},!a.model&&_.has(a,"options.default.value")&&(a.model=a.options["default"].value),a.horizontal){var c=!_.isArray(a.offset)&&a.offset-parseFloat(a.offset)+1>=0,d=c?parseInt(a.offset):2;a["class"].wrapper="col-sm-"+(12-d),_.get(a,"options.label",!1)?a["class"].label="control-label col-sm-"+d:a["class"].wrapper+=" col-sm-offset-"+d}_.get(a,"options.class")&&b.addClass(a.options["class"]),_.get(a,"options.panel",!1)&&(a["class"].panel="panel "+_.get(a,"options.panel.type","panel-default"));var e=b.find("input").datetimepicker(_.get(a,"options.options",{})),f=e.data("DateTimePicker");if(a.model)f.date(a.model);else if(_.get(a,"options.default.field",!1))var g=a.root.$watch("model."+a.options["default"].field,function(b){b&&(a.validation.$dirty?g():(console.log("asfs"),f.date(a.model=b)))},!0);e.on("dp.change dp.error",function(){a.$apply(function(){var b=_.get(a,"options.options.format",null),c=f.date();a.model=c?c.format(b||null):null})})}}}]),angular.module("akat-form-creator").directive("elemdirective",["$compile",function(a){return{templateUrl:"submodules/akat-form-creator/elements/directive/directive.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(b,c){if(b["class"]={},!b.model&&_.has(b,"options.default.value")&&(b.model=b.options["default"].value),b.horizontal){var d=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,e=d?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-e),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+e:b["class"].wrapper+=" col-sm-offset-"+e}if(_.get(b,"options.class")&&c.addClass(b.options["class"]),_.get(b,"options.panel",!1)&&(b["class"].panel="panel "+_.get(b,"options.panel.type","panel-default")),_.get(b,"options.directive",!1)){var f=angular.element("<"+b.options.directive+"/>");_.get(b,"options.attrs")&&_.each(b.options.attrs,function(a,b){f.attr(b,a)}),_.has(b,"options.html")&&f.html(b.options.html),c.find("spam").replaceWith(a(f)(b))}else console.error("Element elemdirective requires a directive field"),c.find("spam").remove();if(!b.model&&_.get(b,"options.default.field",!1))var g=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?g():b.model=a)},!0)}}}]),angular.module("akat-form-creator").directive("elememail",["dynformfilters",function(a){return{templateUrl:"submodules/akat-form-creator/elements/email/email.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(b,c){if(b["class"]={},b.horizontal){var d=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,e=d?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-e),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+e:b["class"].wrapper+=" col-sm-offset-"+e}if(_.has(b,"options.class")&&c.addClass(b.options["class"]),_.get(b,"options.panel",!1)&&(b["class"].panel="panel "+_.get(b,"options.panel.type","panel-default")),!b.model&&_.get(b,"options.default.field",!1))var f=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?f():b.model=a)},!0);var g=_.get(b,"options.filters",!1);g&&(g=a(g),b.$watch("model",function(a){b.model=_.reduce(g,function(a,b){return b(a)},a)}))}}}]),angular.module("akat-form-creator").directive("dynfields",["$compile",function(a){return{restrict:"E",replace:!0,scope:{name:"@",offset:"=",inline:"=",horizontal:"=",model:"=",parent:"=",root:"=",options:"=",validation:"=",form:"="},link:function(b,c){var d=_.get(b,"options",{});d.fields&&_(d.fields).forEach(function(d,e){var f=angular.element("<"+d.type+" />"),g=[],h="model";_.has(b,"name")&&g.push(b.name),_.has(d,"name")&&(g.push(d.name),h+='["'+d.name+'"]');var i=g.join("-");f.attr("data-options","options.fields["+e+"]"),f.attr("data-offset","offset"),f.attr("data-horizontal","horizontal"),f.attr("data-inline","inline"),f.attr("data-model",h),f.attr("data-root","root"),f.attr("data-parent","model"),f.attr("data-name",i),f.attr("data-form","form"),f.attr("data-validation",'validation["'+i+'"]'),c.append(a(f)(b))})}}}]),angular.module("akat-form-creator").directive("dynform",["$compile",function(a){return{restrict:"E",replace:!0,scope:{structure:"=",model:"=",id:"="},link:function(b,c){var d=_.get(b,"structure",{}),e=!1,f=!1,g=!1;if(b.root=b,_.has(b,"model")||(b.model={}),_.defaults(d,{root:"form",novalidate:!0}),!b.name&&!d.name){var h=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,5);d.name="dynform_"+h}var i=angular.element("<"+d.root+" />");if(i.attr("data-name",b.name||d.name),i.attr("data-options","options"),i.attr("data-model","model"),d.horizontal){f=!0,i.addClass("form-horizontal");var j=!_.isArray(d.offset)&&d.offset-parseFloat(d.offset)+1>=0;e=j?parseInt(d.offset):2}else d.inline&&(g=!0,i.addClass("form-inline"));if(d.novalidate&&i.attr("novalidate"),d.panel&&i.addClass("panel panel-default"),d["class"]&&i.addClass(d["class"]),d.fields){var k=angular.element("<dynfields />");k.attr("data-options","structure"),k.attr("data-model","model"),k.attr("data-name",d.name),k.attr("data-form",d.name),k.attr("data-root","root"),k.attr("data-parent","model"),k.attr("data-form",d.name),k.attr("data-validation",d.name),!1!==e&&k.attr("data-offset",e),f&&k.attr("data-horizontal","true"),g&&k.attr("data-inline","true"),i.append(k)}var l=a(i)(b);_(c.children()).forEach(function(a){l.append(a)}),c.append(l)}}}]),angular.module("akat-form-creator").directive("elempassword",function(){return{templateUrl:"submodules/akat-form-creator/elements/password/password.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(a,b){if(a["class"]={},a.horizontal){var c=!_.isArray(a.offset)&&a.offset-parseFloat(a.offset)+1>=0,d=c?parseInt(a.offset):2;a["class"].wrapper="col-sm-"+(12-d),_.get(a,"options.label",!1)?a["class"].label="control-label col-sm-"+d:a["class"].wrapper+=" col-sm-offset-"+d}if(_.has(a,"options.class")&&b.addClass(a.options["class"]),_.get(a,"options.panel",!1)&&(a["class"].panel="panel "+_.get(a,"options.panel.type","panel-default")),!a.model&&_.get(a,"options.default.field",!1))var e=a.root.$watch("model."+a.options["default"].field,function(b){b&&(a.validation.$dirty?e():a.model=b)},!0)}}}),angular.module("akat-form-creator").directive("elemradio",["$http","$log",function(a,b){return{templateUrl:"submodules/akat-form-creator/elements/radio/radio.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",parent:"=",root:"=",options:"=",validation:"=",offset:"=",horizontal:"="},link:function(c){if(c["class"]={},c.key={value:_.get(c,"options.ajax.value","value"),text:_.get(c,"options.ajax.text","text")},!c.model&&_.has(c,"options.default.value")&&(c.model=c.options["default"].value),_.get(c,"options.ajax.url",!1)&&a.get(c.options.ajax.url).then(function(a){return c.options.values=a.data})["catch"](function(a){b.error(a)}),c.horizontal){var d=!_.isArray(c.offset)&&c.offset-parseFloat(c.offset)+1>=0,e=d?parseInt(c.offset):2;c["class"].wrapper="col-sm-"+(12-e),_.get(c,"options.label",!1)?c["class"].label="control-label col-sm-"+e:c["class"].wrapper+=" col-sm-offset-"+e}if(_.get(c,"options.panel",!1)&&(c["class"].panel="panel "+_.get(c,"options.panel.type","panel-default")),!c.model&&_.get(c,"options.default.field",!1))var f=c.root.$watch("model."+c.options["default"].field,function(a){a&&(c.validation.$dirty?f():c.model=a)},!0)}}}]),angular.module("akat-form-creator").directive("elemrichtext",["dynformfilters",function(a){return{templateUrl:"submodules/akat-form-creator/elements/richtext/richtext.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",horizontal:"="},link:function(b,c){if(b["class"]={},b.horizontal){var d=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,e=d?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-e),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+e:b["class"].wrapper+=" col-sm-offset-"+e}if(_.has(b,"options.class")&&c.addClass(b.options["class"]),_.get(b,"options.panel",!1)&&(b["class"].panel="panel "+_.get(b,"options.panel.type","panel-default")),!b.model&&_.get(b,"options.default.field",!1))var f=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?f():b.model=a)},!0);var g=_.get(b,"options.filters",!1);g&&(g=a(g),b.$watch("model",function(a){b.model=_.reduce(g,function(a,b){return b(a)},a)}))}}}]),angular.module("akat-form-creator").directive("elemselectbox",["$http","$injector","$q","$compile","$log",function(a,b,c,d,e){return{templateUrl:"submodules/akat-form-creator/elements/selectbox/selectbox.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(d,f){var g=!1;if(d["class"]={},d.key={value:_.get(d,"options.ajax.value","value"),text:_.get(d,"options.ajax.text","text")},!d.model&&_.has(d,"options.default.value")&&(d.model=d.options["default"].value),_.get(d,"options.ajax.url",!1)&&a.get(d.options.ajax.url).then(function(a){return d.options.options=a.data})["catch"](function(a){e.error(a)}),d.horizontal){var h=!_.isArray(d.offset)&&d.offset-parseFloat(d.offset)+1>=0,i=h?parseInt(d.offset):2;d["class"].wrapper="col-sm-"+(12-i),_.get(d,"options.label",!1)?d["class"].label="control-label col-sm-"+i:d["class"].wrapper+=" col-sm-offset-"+i}if(_.has(d,"options.class")&&f.addClass(d.options["class"]),_.get(d,"options.panel",!1)&&(d["class"].panel="panel "+_.get(d,"options.panel.type","panel-default")),_.get(d,"options.http",!1))g=function(b){var e={},f=_.get(d,"options.http.url",!1);return f&&f.replace&&(e.url=f.replace("%s",b)),c.resolve(_.assign({},d.options.http,e)).then(a).then(function(a){return a.data})};else if(_.get(d,"options.service",!1)){var j=b.get(d.options.service);g=function(a){return c.resolve(j(a))}}else if(_.get(d,"options.resource.name",!1)){var k=b.get(d.options.resource.name),l=_.get(d,"options.resource.method","query"),m=_.get(d,"options.resource.key","query");g=function(a){return k[l](_.set({},m,a)).$promise}}if(g&&(choices.attr("refresh","refresh($select.search)"),_.get(d,"options.refresh",!1)?(d.refresh=function(a){return g(a).then(function(a){return d.options.options=a})},_.has(d,"options.refreshDelay")&&choices.attr("refresh-delay",d.options.refreshDelay)):d.refresh=function(a){if(!_.has(d,"options.options"))return g(a).then(function(a){return d.options.options=a})}),!d.model&&_.get(d,"options.default.field",!1))var n=d.root.$watch("model."+d.options["default"].field,function(a){a&&(d.validation.$dirty?n():d.model=a)},!0)}}}]),angular.module("akat-form-creator").directive("elemtabs",function(){return{templateUrl:"submodules/akat-form-creator/elements/tabs/tabs.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",parent:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"=",form:"="},link:function(a){var b=_.get(a,"options",{});if(a["class"]={},a.tabsHorizontal=_.has(b,"horizontal")?b.horizontal:a.horizontal,a.tabsInline=_.has(b,"inline")?b.inline:a.inline,a.tabsOffset=_.has(b,"offset")?b.offset:a.offset,a.horizontal){var c=!_.isArray(a.offset)&&a.offset-parseFloat(a.offset)+1>=0,d=c?parseInt(a.offset):2;a["class"].wrapper="col-sm-"+(12-d),_.get(a,"options.label",!1)?a["class"].label="control-label col-sm-"+d:a["class"].wrapper+=" col-sm-offset-"+d}if(_.get(a,"options.panel",!1)&&(a["class"].panel="panel "+_.get(a,"options.panel.type","panel-default")),a.model||(a.model={}),!a.model&&_.get(a,"options.default.field",!1))var e=a.root.$watch("model."+a.options["default"].field,function(b){b&&(a.validation.$dirty?e():a.model=b)},!0)}}}),angular.module("akat-form-creator").directive("elemtags",["$http",function(a){return{templateUrl:"submodules/akat-form-creator/elements/tags/tags.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",horizontal:"="},link:function(b,c){if(b["class"]={},b.horizontal){var d=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,e=d?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-e),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+e:b["class"].wrapper+=" col-sm-offset-"+e}_.has(b,"options.class")&&c.addClass(b.options["class"]),_.get(b,"options.panel",!1)&&(b["class"].panel="panel "+_.get(b,"options.panel.type","panel-default"));var f=_.get(b,"options.ajax.url",!1),g=_.get(b,"options.ajax.text",!1);if(b.setData=function(b){if(!f)return[];var c=a.get(f.replace("%s",b));return g?c.then(function(a){return a.data=_.map(a.data,function(a){return a.text=a[g]}),a}):c},!b.model&&_.get(b,"options.default.field",!1))var h=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?h():b.model=a)},!0)}}}]),angular.module("akat-form-creator").directive("elemtextarea",["dynformfilters",function(a){return{templateUrl:"submodules/akat-form-creator/elements/textarea/textarea.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",root:"=",options:"=",validation:"=",offset:"=",horizontal:"="},link:function(b,c){if(b["class"]={},!b.model&&_.has(b,"options.default.value")&&(b.model=b.options["default"].value),b.horizontal){var d=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,e=d?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-e),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+e:b["class"].wrapper+=" col-sm-offset-"+e}if(_.has(b,"options.class")&&c.addClass(b.options["class"]),_.get(b,"options.panel",!1)&&(b["class"].panel="panel "+_.get(b,"options.panel.type","panel-default")),!b.model&&_.get(b,"options.default.field",!1))var f=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?f():b.model=a)},!0);var g=_.get(b,"options.filters",!1);g&&(g=a(g),b.$watch("model",function(a){b.model=_.reduce(g,function(a,b){return b(a)},a)}))}}}]),angular.module("akat-form-creator").directive("elemtextfield",["dynformfilters",function(a){return{templateUrl:"submodules/akat-form-creator/elements/textfield/textfield.html",restrict:"E",replace:!0,scope:{name:"@",offset:"=",inline:"=",horizontal:"=",model:"=",root:"=",options:"=",validation:"="},link:function(b,c){if(b["class"]={},!b.model&&_.has(b,"options.default.value")&&(b.model=b.options["default"].value),b.horizontal){var d=!_.isArray(b.offset)&&b.offset-parseFloat(b.offset)+1>=0,e=d?parseInt(b.offset):2;b["class"].wrapper="col-sm-"+(12-e),_.get(b,"options.label",!1)?b["class"].label="control-label col-sm-"+e:b["class"].wrapper+=" col-sm-offset-"+e}if(_.get(b,"options.class")&&c.addClass(b.options["class"]),_.get(b,"options.panel",!1)&&(b["class"].panel="panel "+_.get(b,"options.panel.type","panel-default")),!b.model&&_.get(b,"options.default.field",!1))var f=b.root.$watch("model."+b.options["default"].field,function(a){a&&(b.validation.$dirty?f():b.model=a)},!0);var g=_.get(b,"options.filters",!1);g&&(g=a(g),b.$watch("model",function(a){b.model=_.reduce(g,function(a,b){return b(a)},a)}))}}}]),angular.module("akat-form-creator").directive("elemuiselect",["$http","$injector","$q","$compile",function(a,b,c,d){return{templateUrl:"submodules/akat-form-creator/elements/uiselect/uiselect.html",restrict:"E",replace:!0,scope:{name:"@",model:"=",parent:"=",root:"=",options:"=",validation:"=",offset:"=",inline:"=",horizontal:"="},link:function(e,f){e["class"]={};var g=angular.element("<ui-select/>"),h=angular.element("<ui-select-match/>"),i=angular.element("<ui-select-choices/>"),j=_.get(e,"options.grouby",!1),k=_.get(e,"options.bind",null),l=_.get(e,"options.selected",null),m=_.get(e,"options.multiple",!1),n=[],o=[],p=!1;if(n.push("item"+(k?"."+k:"")),n.push("as item in options.options"),n.push("| filter: $select.search"),g.attr("data-ng-model","parent[options.name]"),g.attr("theme",_.get(e,"options.theme","bootstrap")),i.attr("repeat",n.join(" ")),l&&(l="."+l),m?h.html("{{ $item"+l+" }}"):(o.push("| highlight:$select.search"),h.html("{{ $select.selected"+l+" }}")),j&&i.attr("group-by",j),m&&g.attr("multiple",!0),_.get(e,"options.appendToBody",!1)&&g.attr("append-to-body","true"),_.has(e,"options.placeholder")&&h.attr("placeholder",e.options.placeholder),_.get(e,"options.http",!1))p=function(b){var d={},f=_.get(e,"options.http.url",!1);return f&&f.replace&&(d.url=f.replace("%s",b)),c.resolve(_.assign({},e.options.http,d)).then(a).then(function(a){return a.data})};else if(_.get(e,"options.service",!1)){var q=b.get(e.options.service);p=function(a){return c.resolve(q(a))}}else if(_.get(e,"options.resource.name",!1)){var r=b.get(e.options.resource.name),s=_.get(e,"options.resource.method","query"),t=_.get(e,"options.resource.key","query");p=function(a){return r[s](_.set({},t,a)).$promise}}if(p&&(i.attr("refresh","refresh($select.search)"),_.get(e,"options.refresh",!1)?(e.refresh=function(a){return p(a).then(function(a){return e.options.options=a})},_.has(e,"options.refreshDelay")&&i.attr("refresh-delay",e.options.refreshDelay)):e.refresh=function(a){if(!_.has(e,"options.options"))return p(a).then(function(a){return e.options.options=a})}),!e.model&&_.has(e,"options.default.value")&&(e.model=e.options["default"].value),e.horizontal){var u=!_.isArray(e.offset)&&e.offset-parseFloat(e.offset)+1>=0,v=u?parseInt(e.offset):2;e["class"].wrapper="col-sm-"+(12-v),_.get(e,"options.label",!1)?e["class"].label="control-label col-sm-"+v:e["class"].wrapper+=" col-sm-offset-"+v}if(_.has(e,"options.class")&&f.addClass(e.options["class"]),_.get(e,"options.panel",!1)&&(e["class"].panel="panel "+_.get(e,"options.panel.type","panel-default")),_.get(e,"options.template",!1)?i.html(e.options.template):_.get(e,"options.templateDirective",!1)?i.html("<"+e.options.templateDirective+"/>"):_.get(e,"options.templateUrl",!1)?i.html('<ng-include src="'+e.options.templateUrl+'"></ng-include>'):i.html('<span ng-bind-html="item'+l+" "+o.join(" ")+'"/>'),!e.model&&_.get(e,"options.default.field",!1))var w=e.root.$watch("model."+e.options["default"].field,function(a){a&&(e.validation.$dirty?w():e.model=a)},!0);g.append(h).append(i),f.find("span").replaceWith(d(g)(e))}}}]),angular.module("akat-form-creator").factory("dynformfilters",["$injector","$log",function(a,b){function c(c,d){var e=_.get(d,"type",d);return a.has(e)?c.push(a.get(e)(d)):a.has("dynform"+e)?c.push(a.get("dynform"+e)(d)):b.error("Unabled to find filter",e),c}return function(a){return _.reduce(a,c,[])}}]).factory("dynformreplace",function(){return function(a){var b=_.get(a,"from",!1),c=_.get(a,"to","");return b?function(a){return a&&a.replace?a.replace(b,c):a}:function(a){return a}}}).factory("dynformlowercase",function(){return function(){return function(a){return a&&a.toLowerCase?a.toLowerCase():a}}}).factory("dynformuppercase",function(){return function(){return function(a){return a&&a.toUpperCase?a.toUpperCase():a}}}).factory("dynformtrim",function(){return function(){return function(a){return a&&a.trim?a.trim():a}}}).factory("dynformlatinise",function(){return function(){return function(a){return a&&_.isString(a)?S(a).latinise().s:a}}}).factory("dynformslugify",function(){return function(){return function(a){return a&&_.isString(a)?S(a).slugify().s:a}}}).constant("dynformgreeklishmap",{"ου":"ou","ΟΥ":"OU","Ού":"Ou","ού":"ou","αυ":"au","ΑΥ":"AU","Αύ":"Au","αύ":"au","ευ":"eu","ΕΥ":"EU","Εύ":"Eu","εύ":"eu","α":"a","Α":"A","ά":"a","Ά":"A","β":"b","Β":"B","γ":"g","Γ":"G","δ":"d","Δ":"D","ε":"e","Ε":"E","έ":"e","Έ":"E","ζ":"z","Ζ":"Z","η":"i","Η":"I","ή":"i","Ή":"I","θ":"th","Θ":"th","ι":"i","Ι":"I","ί":"i","Ί":"I","ϊ":"i","ΐ":"i","Ϊ":"I","κ":"k","Κ":"K","λ":"l","Λ":"L","μ":"m","Μ":"M","ν":"n","Ν":"N","ξ":"ks","Ξ":"KS","ο":"o","Ο":"O","ό":"o","Ό":"O","π":"p","Π":"P","ρ":"r","Ρ":"R","σ":"s","Σ":"S","ς":"s","τ":"t","Τ":"T","υ":"y","Υ":"Y","ύ":"y","Ύ":"y","ϋ":"y","ΰ":"y","Ϋ":"Y","φ":"f","Φ":"f","χ":"x","Χ":"X","ψ":"ps","Ψ":"PS","ω":"o","Ω":"O","ώ":"o","Ώ":"O"}).factory("dynformgreeklish",["dynformgreeklishmap",function(a){function b(b){return a[b]||b}return function(){return function(a){return a&&a.replace?a.replace(/[^A-Za-z0-9\[\] ]/g,b):a}}}]).factory("dynformnormalize",function(){return function(a){return function(b){if(!_.isString(b))return b;for(var c=b.normalize(_.get(a,"type","NFD")),d="",e=0,f=0;e<b.length;)d+=c[f],f+=b[e]==c[f]?1:2,++e;return d}}}),angular.module("akat-form-creator").run(["$templateCache",function(a){a.put("submodules/akat-form-creator/elements/box/box.html",'<div class="box form-group">\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n</div>'),a.put("submodules/akat-form-creator/elements/boxarray/boxarray.html",'<div class="form-group">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n\n                <div data-ng-if="!options.sortable" data-ng-repeat="item in model">\n\n                    <dynfields\n                        data-options="options"\n                        data-model="item"\n                        data-parent="item"\n                        data-root="root"\n                        data-name="{{ name + \'-\' + $index }}"\n                        data-form="form"\n                        data-validation="validation || form"\n                        data-horizontal="fieldsHorizontal"\n                        data-inline="fieldsInline"\n                        data-offset="fieldsOffset"\n                    ></dynfields>\n\n                    <div data-ng-if="controls" class="form-group controls">\n                        <div class="col-sm-11 col-sm-offset-1 input-group-btn">\n                            <button type="button" class="btn btn-danger">\n                                <span class="glyphicon glyphicon-minus"></span>\n                            </button>\n                            <button data-ng-if="$last" type="button" class="btn btn-default">\n                                <span class="glyphicon glyphicon-plus"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div data-ng-if="options.sortable" ui-sortable="options.sortable" ng-model="model">\n                    <div data-ng-repeat="item in model">\n\n                        <dynfields\n                            data-options="options"\n                            data-model="item"\n                            data-parent="item"\n                            data-root="root"\n                            data-name="{{ name + \'-\' + $index }}"\n                            data-form="form"\n                            data-validation="validation || form"\n                            data-horizontal="fieldsHorizontal"\n                            data-inline="fieldsInline"\n                            data-offset="fieldsOffset"\n                        ></dynfields>\n\n                        <div data-ng-if="controls" class="form-group">\n                            <div class="col-sm-11 col-sm-offset-1 input-group-btn">\n                                <button data-ng-click="delete( $index, item )" type="button" class="btn btn-danger">\n                                    <span class="glyphicon glyphicon-minus"></span>\n                                </button>\n                                <button data-ng-click="add()" data-ng-if="$last" type="button" class="btn btn-default">\n                                    <span class="glyphicon glyphicon-plus"></span>\n                                </button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div data-ng-if="controls && !model.length" class="form-group">\n                    <div class="col-sm-11 col-sm-offset-1 input-group-btn">\n                        <button data-ng-click="add()" type="button" class="btn btn-default">\n                            <span class="glyphicon glyphicon-plus"></span>\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/checkbox/checkbox.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <div class="checkbox">\n                    <label>\n                        <input type="checkbox" name="{{ name }}" ng-model="model">\n                        {{options.text}}\n                    </label>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/datepicker/datepicker.html",'<div class="form-group" ng-init="init()" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <div class="input-group">\n                    <input\n                        type="text"\n                        name="{{ name }}"\n                        class="form-control"\n                        uib-datepicker-popup="{{format}}"\n                        ng-model="model"\n                        is-open="popup1.opened"\n                        datepicker-options="dateOptions"\n                        ng-required="true"\n                        close-text="Close"\n                        alt-input-formats="altInputFormats"\n                    />\n\n                    <span class="input-group-btn">\n                        <button type="button" class="btn btn-default" ng-click="open1()"><i class="glyphicon glyphicon-calendar"></i></button>\n                    </span>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),
a.put("submodules/akat-form-creator/elements/datetimepicker/datetimepicker.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <div class="input-group">\n                    <input\n                        type="text"\n                        name="{{ name }}"\n                        class="form-control"\n                        placeholder="{{ options.placeholder }}"\n                        data-ng-model="model"\n\n                        data-ng-required="options.required"\n                    />\n                    <span class="input-group-addon">\n                        <span class="glyphicon glyphicon-calendar"></span>\n                    </span>\n                </div>\n\n                <div data-ng-if="!inline">\n                    <p data-ng-show="validation.$touched && validation.$error.required" class="help-block">{{ options.name }} is required.</p>\n                    <p data-ng-show="validation.$error.minlength" class="help-block">{{ options.name }} is too short.</p>\n                    <p data-ng-show="validation.$error.maxlength" class="help-block">{{ options.name }} is too long.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>'),a.put("submodules/akat-form-creator/elements/directive/directive.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <spam hidden></spam>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/email/email.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <div class="input-group">\n                    <span class="input-group-addon">@</span>\n                    <input\n                        type="email"\n                        name="{{ name }}"\n                        class="form-control"\n                        placeholder="{{options.placeholder}}"\n                        ng-model="model"\n\n                        ng-attr-ng-minlength="{{ options.validators.minlength }}"\n                        ng-attr-ng-maxlength="{{ options.validators.maxlength }}"\n                        ng-required="options.required"\n                    />\n                </div>\n\n                <div data-ng-if="!inline">\n                    <p data-ng-show="validation.$touched && validation.$error.required" class="help-block">{{ options.name }} is required.</p>\n                    <p data-ng-show="validation.$error.minlength" class="help-block">{{ options.name }} is too short.</p>\n                    <p data-ng-show="validation.$error.maxlength" class="help-block">{{ options.name }} is too long.</p>\n                    <p data-ng-show="validation.$error.email" class="help-block">{{ options.name }} is not a valid email.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>'),a.put("submodules/akat-form-creator/elements/password/password.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <input\n                    type="password"\n                    name="{{ name }}"\n                    class="form-control"\n                    placeholder="{{options.placeholder}}"\n                    data-ng-model="model"\n\n                    data-ng-attr-ng-minlength="{{ options.validators.minlength }}"\n                    data-ng-attr-ng-maxlength="{{ options.validators.maxlength }}"\n                    data-ng-required="options.required"\n                />\n\n                <div data-ng-if="!inline">\n                    <p data-ng-show="validation.$touched && validation.$error.required" class="help-block">{{ options.name }} is required.</p>\n                    <p data-ng-show="validation.$error.minlength" class="help-block">{{ options.name }} is too short.</p>\n                    <p data-ng-show="validation.$error.maxlength" class="help-block">{{ options.name }} is too long.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>'),a.put("submodules/akat-form-creator/elements/radio/radio.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <div class="radio" ng-repeat="radio in options.values">\n                    <label>\n                        <input type="radio" data-ng-model="parent[options.name]" data-ng-change="update(radio[key.value])" name="{{ name }}" value="{{ radio[key.value] }}" >\n                        {{ radio[key.text] }}\n                    </label>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/richtext/richtext.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <text-angular\n                    ng-model="model"\n                    ta-unsafe-sanitizer="true"\n                ></text-angular>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/selectbox/selectbox.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <select name="{{ name }}" class="form-control" data-ng-model="model">\n                    <option ng-repeat="option in options.options" value="{{option[key.value]}}">{{option[key.text]}}</option>\n                </select>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/tabs/tabs.html",'<div class="form-group">\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <uib-tabset active="active">\n                    <uib-tab index="$index + 1" ng-repeat="tab in options.tabs" heading="{{ tab.tabname }}">\n                        <uib-tab-heading>{{ tab.tabname }}</uib-tab-heading>\n                            <br/>\n                            <dynfields\n                                data-name="{{ (name ? name + \'-\' : \'\') + tab.tabname }}"\n                                data-options="tab"\n                                data-model="model[tab.tabname]"\n                                data-parent="model"\n                                data-root="root"\n                                data-validation="form"\n                                data-form="form"\n                                data-ng-attr-data-offset="tabsOffset"\n                                data-ng-attr-data-horizontal="tabsHorizontal"\n                                data-ng-attr-data-inline="tabsInline"\n                            ></dynfields>\n                        <hr>\n                    </uib-tab>\n                </uib-tabset>\n            </div>\n\n        </div>\n    </div>\n</div>'),a.put("submodules/akat-form-creator/elements/tags/tags.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <tags-input\n                    name="{{ ::name }}"\n                    ng-model="model"\n                    ng-attr-min-tags="{{ options.validators.minlength }}"\n                    ng-attr-max-tags="{{ options.validators.maxlength }}"\n                    ng-attr-allow-leftover-text="{{ options.allowLeftOverText }}"\n                    ng-required="options.required"\n                >\n                    <auto-complete source="setData($query)"></auto-complete>\n                </tags-input>\n\n                <div>\n                    <p data-ng-show="validation.$touched && validation.$error.required" class="help-block">{{ options.name }} is required.</p>\n                    <p data-ng-show="validation.$error.minlength" class="help-block">{{ options.name }} is too short.</p>\n                    <p data-ng-show="validation.$error.maxlength" class="help-block">{{ options.name }} is too long.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/textarea/textarea.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <textarea\n                    name="{{ ::name }}"\n                    rows="{{ options.rows || 4 }}"\n                    cols="{{ options.cols || 50 }}"\n                    class="form-control"\n                    placeholder="{{options.placeholder}}"\n                    ng-model="model"\n\n                    ng-attr-ng-minlength="{{ options.validators.minlength }}"\n                    ng-attr-ng-maxlength="{{ options.validators.maxlength }}"\n                    ng-required="options.required"\n                ></textarea>\n\n                <div>\n                    <p data-ng-show="validation.$touched && validation.$error.required" class="help-block">{{ options.name }} is required.</p>\n                    <p data-ng-show="validation.$error.minlength" class="help-block">{{ options.name }} is too short.</p>\n                    <p data-ng-show="validation.$error.maxlength" class="help-block">{{ options.name }} is too long.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/textfield/textfield.html",'<div class="form-group" data-ng-class="{ \'has-error\' : validation.$touched && validation.$invalid }">\n\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div ng-style="inline && {\'display\': \'inline-block\'}" data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <input\n                    type="text"\n                    name="{{ name }}"\n                    class="form-control"\n                    placeholder="{{options.placeholder}}"\n                    data-ng-model="model"\n\n                    data-ng-attr-ng-minlength="{{ options.validators.minlength }}"\n                    data-ng-attr-ng-maxlength="{{ options.validators.maxlength }}"\n                    data-ng-trim="options.trim"\n                    data-ng-required="options.required"\n                />\n\n                <div data-ng-if="!inline">\n                    <p data-ng-show="validation.$touched && validation.$error.required" class="help-block">{{ options.name }} is required.</p>\n                    <p data-ng-show="validation.$error.minlength" class="help-block">{{ options.name }} is too short.</p>\n                    <p data-ng-show="validation.$error.maxlength" class="help-block">{{ options.name }} is too long.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</div>\n'),a.put("submodules/akat-form-creator/elements/uiselect/uiselect.html",'<div class="form-group">\n    <label data-ng-if="options.label" data-ng-class="class.label">{{ options.label }}</label>\n\n    <div data-ng-class="class.wrapper">\n        <div data-ng-class="class.panel">\n\n            <div data-ng-if="options.panel.heading" class="panel-heading">\n                {{ options.panel.heading }}\n            </div>\n\n            <div data-ng-class="{ \'panel-body\': options.panel }">\n                <span></span>\n            </div>\n\n        </div>\n    </div>\n</div>')}]);